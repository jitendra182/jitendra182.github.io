{"version":3,"sources":["screens/common/Header.jsx","screens/common/Footer.jsx","screens/Resume.jsx","screens/Contact.jsx","screens/About.jsx","screens/Home.jsx","screens/common/Single.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","Navbar","bg","variant","expand","fixed","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Link","Footer","Resume","Container","Contact","About","Row","Col","xs","md","Home","src","alt","Single","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"yRA+BeA,MAxBf,WACE,OACE,6BACE,kBAACC,EAAA,EAAD,CAAQC,GAAG,OAAOC,QAAQ,OAAOC,OAAO,KAAKC,MAAM,OACnD,kBAACJ,EAAA,EAAOK,MAAR,CAAcC,KAAK,SAAnB,kBAEE,kBAACN,EAAA,EAAOO,OAAR,CAAeC,gBAAc,qBAC7B,kBAACR,EAAA,EAAOS,SAAR,CAAiBC,GAAG,oBAClB,kBAACC,EAAA,EAAD,CAAKC,UAAU,WAKZ,kBAACD,EAAA,EAAIE,KAAL,CAAUP,KAAK,SAAf,QACA,kBAACK,EAAA,EAAIE,KAAL,CAAUP,KAAK,UAAf,SACA,kBAACK,EAAA,EAAIE,KAAL,CAAUP,KAAK,WAAf,UACA,kBAACK,EAAA,EAAIE,KAAL,CAAUP,KAAK,YAAf,gBCXEQ,MAVf,WACI,OACI,oCACI,4BAAQF,UAAU,8BACd,qG,QCSDG,MAVf,WACI,OACI,oCACI,kBAACC,EAAA,EAAD,CAAWN,GAAG,UACV,iDCKDO,MAVf,WACI,OACI,oCACI,kBAACD,EAAA,EAAD,CAAWN,GAAG,WACV,kD,gBCoDDQ,MAzDf,WACE,OACE,oCACE,kBAACF,EAAA,EAAD,CAAWN,GAAG,SACZ,wBAAIE,UAAU,eAAd,YACA,wBAAIA,UAAU,eAAd,yBACA,kBAACO,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,GACf,sPAMA,mSAOA,oIAKF,kBAACF,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,GACf,0CACA,4BACE,wEACA,4FAGA,sFACA,gGAGA,iHAIA,+GAIA,kIC1BCC,MAlBf,WACE,OACE,oCACE,kBAACP,EAAA,EAAD,CAAWN,GAAG,QACZ,yBAAKE,UAAU,YACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,iBAAiBF,GAAG,SAASc,IAAI,kCAAkCC,IAAI,gBAExF,yBAAKb,UAAU,IACb,yCACA,mD,MCSGc,MAbf,WACI,OACI,6BACI,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCLGC,MARf,WACE,OACE,yBAAKf,UAAU,OACb,kBAAC,EAAD,QCIcgB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.a280eb23.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n} from \"react-bootstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <div>\r\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" fixed=\"top\">\r\n      <Navbar.Brand href=\"#home\">Jitendra Nayak</Navbar.Brand>\r\n        {/* <Navbar.Brand as={NavLink} to=\"/\">Jitendra</Navbar.Brand> */}\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            {/* <Nav.Link as={NavLink} to='/'>Home</Nav.Link>\r\n            <Nav.Link as={NavLink} to='/resume'>Resume</Nav.Link>\r\n            <Nav.Link as={NavLink} to='/about'>About</Nav.Link>\r\n            <Nav.Link as={NavLink} to='/contact'>Contact</Nav.Link> */}\r\n             <Nav.Link href=\"#home\">Home</Nav.Link>\r\n             <Nav.Link href=\"#about\">About</Nav.Link>\r\n             <Nav.Link href=\"#resume\">Resume</Nav.Link>\r\n             <Nav.Link href=\"#contact\">Contact</Nav.Link>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <>\r\n            <footer className=\"w-100 bg-light text-center\">\r\n                <p>Â© 2020 JitendraNayak. All Rights Reserved | Terms and Conditions</p>\r\n            </footer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport Header from './common/Header'\r\nimport Footer from './common/Footer'\r\nimport { Container } from 'react-bootstrap'\r\n\r\nfunction Resume() {\r\n    return (\r\n        <>\r\n            <Container id=\"resume\">\r\n                <h1>This is Resume</h1>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Resume\r\n","import React from 'react'\r\nimport Header from './common/Header'\r\nimport { Container } from 'react-bootstrap'\r\n\r\nfunction Contact() {\r\n    return (\r\n        <>\r\n            <Container id=\"contact\">\r\n                <h1>This is Contact</h1>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Contact\r\n","import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nfunction About() {\r\n  return (\r\n    <>\r\n      <Container id=\"about\">\r\n        <h1 className=\"text-center\">ABOUT ME</h1>\r\n        <h3 className=\"text-center\">--------- * ---------</h3>\r\n        <Row>\r\n          <Col xs={12} md={6}>\r\n            <p>\r\n              I have 18+ years of experience as a software engineer,\r\n              entrepreneur, and team builder. I founded and sold two startups\r\n              (BillMonk, Precision Polling), and built a new 8-figure ARR\r\n              business at SurveyMonkey (Audience).\r\n            </p>\r\n            <p>\r\n              I'm a hands-on technical leader who has built software products\r\n              from the ground up, run large engineering teams, and provided\r\n              guidance at the executive and board level. I'm motivated by\r\n              product success and business growth, not technology for\r\n              technology's sake.\r\n            </p>\r\n            <p>\r\n              I'm always interested in becoming a better technology leader, and\r\n              meeting interesting people in NYC.\r\n            </p>\r\n          </Col>\r\n          <Col xs={12} md={6}>\r\n            <h1>HIGHLIGHTS</h1>\r\n            <ul>\r\n              <li>Founded and sold two software companies.</li>\r\n              <li>\r\n                Built an 8-figure ARR business at SurveyMonkey from scratch.\r\n              </li>\r\n              <li>Was a bar-raiser at Amazon, conducted 200+ interviews.</li>\r\n              <li>\r\n                Presented to Jeff Bezos at Amazon, awarded patent for this work.\r\n              </li>\r\n              <li>\r\n                Chair of technical leadership council as SurveyMonkey grew from\r\n                50 to 700 people.\r\n              </li>\r\n              <li>\r\n                Co-founded Seattle Tech Startups group with 2500+ members,\r\n                honored by GeekWire.\r\n              </li>\r\n              <li>\r\n                Currently Director of Engineering for platform (Frontend,\r\n                Backend, Dev Ops, and Data) at VTS\r\n              </li>\r\n            </ul>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import React from \"react\";\r\nimport { Jumbotron, Button, Container } from \"react-bootstrap\";\r\nimport Header from \"./common/Header\";\r\n\r\nfunction Home() {\r\n  return (\r\n    <>\r\n      <Container id=\"home\">\r\n        <div className=\"home-div\">\r\n          <div className=\"home-margin\">\r\n            <img className=\"img-responsive\" id=\"my-img\" src=\"https://via.placeholder.com/250\" alt=\" asjkcausn\"/>\r\n          </div>\r\n          <div className=\"\">\r\n            <h1>Some Text</h1>\r\n            <h2>Some more text</h2>\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react'\r\nimport Header from './Header'\r\nimport Resume from '../Resume'\r\nimport Contact from '../Contact'\r\nimport Footer from './Footer'\r\nimport About from '../About'\r\nimport Home from '../Home'\r\n\r\nimport \"../../App.css\";\r\n\r\nfunction Single() {\r\n    return (\r\n        <div>\r\n            <Header />\r\n            <Home />\r\n            <About />\r\n            <Resume />\r\n            <Contact />\r\n            <Footer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Single\r\n","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./Styles.css\";\nimport Single from \"./screens/common/Single\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Single />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}